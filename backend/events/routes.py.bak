#import all the necessary moduls
from flask import Blueprint, render_template, redirect, url_for, flash
from flask_login import login_required, current_user
from website.extensions import db
from website.models import Event, Comment
from website.forms import CommentForm
from ..forms import CommentForm
from flask_login import login_required, current_user
from flask import flash, redirect, url_for


# create the blueprint for events
events_bp = Blueprint("events", __name__)

#handle event detail and comment posting
@events_bp.route("/event/<int:event_id>", methods=["GET", "POST"])
def event_detail(event_id):
        event = Event.query.get_or_404(event_id)
        form = CommentForm()
        
        #POST: create a commet only for the logged in userds
        if form.validate_on_submit():
        return create_comment_safe(form, event, current_user, Comment, db, flash, redirect, url_for)
            if not current_user.is_authenticated:
                flash("You have to be logged in to post a comment.", "warning")
                return redirect(url_for("auth.login", next=url_for("events.event_detail", event_id=event_id)))
            
            comment = Comment(
                content=form.body.data.strip(),
                user_name=current_user.username,
                event_id=event.id
            )
            db.session.add(comment)
            db.session.commit()
            flash("Comment has been posted successfully.", "success")
            return redirect(url_for("events.event_detail", event_id=event.id))
        
        #GET: show page with existing comments
        comments = Comment.query.filter_by(event_id=event.id).order_by(Comment.created_at.desc()).all()
        return render_template("event_detail.html", event=event, form=form, comments=comments)
